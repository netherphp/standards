<?xml version="1.0"?>
<ruleset name="Nether Standard" namespace="NetherCS">
	<description>The Nether Notation CodeSniffer Standard for CodeSniffer.</description>

	<rule ref="Generic.PHP.DisallowShortOpenTag" />
	<rule ref="Generic.WhiteSpace.DisallowSpaceIndent" />
	<rule ref="Generic.Arrays.DisallowLongArraySyntax" />
	<rule ref="Generic.Files.LineEndings">
		<properties>
			<property name="eolChar" value="\n"/>
		</properties>
	</rule>

	<!-- formatting rules to write code that is visually correct. -->

	<rule ref="NetherCS.Formatting.ConstantsBoolNullAllCaps" />
	<rule ref="NetherCS.Formatting.NamespaceNamesPascalCase" />
	<rule ref="NetherCS.Formatting.NamespaceMultiUseMultiLine" />
	<rule ref="NetherCS.Formatting.ClassNamesPascalCase" />
	<rule ref="NetherCS.Formatting.ClassExtensionsUnderName" />
	<rule ref="NetherCS.Formatting.ClassBodyBracesSameLine" />
	<rule ref="NetherCS.Formatting.ClassTraitsUseMultiLine" />
	<rule ref="NetherCS.Formatting.ClassConstsNamesPascalCase" />
	<rule ref="NetherCS.Formatting.ClassConstsDefinedUnderKeywords" />
	<rule ref="NetherCS.Formatting.ClassPropertiesPascalCase" />
	<rule ref="NetherCS.Formatting.ClassPropertiesDefinedUnderKeywords" />
	<rule ref="NetherCS.Formatting.FunctionNamesPascalCase" />
	<rule ref="NetherCS.Formatting.FunctionNamesUnderKeywords" />
	<rule ref="NetherCS.Formatting.FunctionArgumentTypesPascalCase" />
	<rule ref="NetherCS.Formatting.FunctionReturnTypesCasing" />
	<rule ref="NetherCS.Formatting.FunctionReturnTypesUnderName" />
	<rule ref="NetherCS.Formatting.FunctionVariableNamesPascalCase" />
	<rule ref="NetherCS.Formatting.FunctionBodyBracesSameLine" />

	<!-- coding rules to write code that is intellectually correct. -->

	<rule ref="NetherCS.Coding.NamespaceExplicitUse" />
	<rule ref="NetherCS.Coding.ClassMethodsMustHaveVisiblity" />
	<rule ref="NetherCS.Coding.FunctionExplicitReturn" />
	<rule ref="NetherCS.Coding.FunctionVariableDeclare" />
	<rule ref="NetherCS.Coding.DisallowArrayDerpComma" />

</ruleset>
